plugins {
    id 'java-library'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'checkstyle'
}

repositories {
    mavenCentral()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2'
    implementation 'dev.jorel:commandapi-bukkit-shade:9.3.0'
    compileOnly 'org.spigotmc:spigot-api:1.19-R0.1-SNAPSHOT'
    compileOnly 'org.jetbrains:annotations:15.0'

    shadow 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    shadow 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2'
}

group = 'au.com.grieve'
version = './src/build/version.py'.execute().text.trim()
description = 'PortalNetwork'
java.sourceCompatibility = JavaVersion.VERSION_17
base {
    archivesName = "${description}-Clod"
}

shadowJar {
    archiveClassifier.set('')
    enableRelocation true
    minimize()
}
tasks.named('build') {
    dependsOn('shadowJar')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:deprecation'
}

spotless {
    format 'misc', {
        target '*.gradle', '.gitattributes', '.gitignore'
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
    java {
        googleJavaFormat('1.19.2').reflowLongStrings().skipJavadocFormatting()
        formatAnnotations()
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

if (file('local.gradle').exists()) {
    apply from: 'local.gradle'
}
